@model CCIA.Models.SampleLabResultsViewModel.SampleLabResultsViewModel
@{string errorClass = "";}
<form asp-action="Edit">
@Html.HiddenFor(s => s.Labs.SeedsId)
<div class="row">
    <div class="col-sm-12">
        <h2>Lab Results</h2>
    </div>
</div>
<div class="row">
    <div class="col-sm-12 text-danger" asp-validation-summary="All"> 
    </div>
</div>
<div class="form-group row">
    <div class="col-sm-3 col-form-label"></div>
    <div class="col-sm-1 col-form">
       Value
    </div>
    <div class="col-sm-2">&nbsp;</div>
    <div class="col-sm-6 col-form">
        Comments        
    </div>
</div>
<div class="form-group row">
    <label asp-for="Labs.PurityPercent" class="col-sm-3 col-form-label"></label>
    <div class="col-sm-3 col-form">  
       @if(ViewData.ModelState.GetFieldValidationState("Labs.PurityPercent")  == Microsoft.AspNetCore.Mvc.ModelBinding.ModelValidationState.Invalid)
       {
          errorClass = "input-validation-error";
       } else 
       {
           errorClass = "";
       }      
        <input class="@errorClass" type="text" data-val="true" data-val-number="The field Purity value must be a number." data-val-range="The field Purity value must be between 0 and 100." data-val-range-max="100" data-val-range-min="0" data-val-required="The Purity value field is required." id="Labs_PurityPercent" name="Labs.PurityPercent" value="@Model.Labs.PurityValue">             
    </div>        
    <div class="col-sm-6 col-form">
        <textarea asp-for="Labs.PurityComments" rows="1" cols="30" ></textarea>
    </div>
</div>
@if(Model.Standards.ShowInert)
{ 
    <div class="form-group row">
        <label asp-for="Labs.InertPercent" class="col-sm-3 col-form-label"></label>
        <div class="col-sm-3 col-form">
            @if(ViewData.ModelState.GetFieldValidationState("Labs.InertPercent")  == Microsoft.AspNetCore.Mvc.ModelBinding.ModelValidationState.Invalid)
            {
                errorClass = "input-validation-error";
            } else 
            {
                errorClass = "";
            }    
            <input class="@errorClass" type="text" data-val="true" data-val-number="The field Inert value must be a number." data-val-range="The field Inert value must be between 0 and 100." data-val-range-max="100" data-val-range-min="0" data-val-required="The Inert value field is required." id="Labs_InertPercent" name="Labs.InertPercent" value="@Model.Labs.InertValue">
        </div>
        <div class="col-sm-6 col-form">
            <textarea asp-for="Labs.InertComments" rows="1" cols="30" ></textarea>
        </div>
    </div> 
}
@if(Model.Standards.OtherVarietyType != null)
{
    <div class="form-group row align-items-start">
        <label asp-for="Labs.OtherVarietyPercent" class="col-sm-3 col-form-label"></label>
        <div class="col-sm-3 col-form">
            @if(Model.Standards.OtherVarietyType == "R")
            {                
                @if(ViewData.ModelState.GetFieldValidationState("Labs.OtherVarietyPercent")  == Microsoft.AspNetCore.Mvc.ModelBinding.ModelValidationState.Invalid)
                {
                    errorClass = "input-validation-error";
                } else 
                {
                    errorClass = "";
                }    
                <input class="@errorClass" type="text" data-val="true" data-val-number="The field Other Variety value must be a number." data-val-range="The field Other Variety value must be between 0 and 100." data-val-range-max="100" data-val-range-min="0" data-val-required="The Other Variety value field is required." id="Labs_OtherVarietyPercent" name="Labs.OtherVarietyPercent" value="@Model.Labs.OtherVarietyValue">
            } else if(Model.Standards.OtherVarietyType == "C")
            {
                <input asp-for="Labs.OtherVarietyCount" >
            }
        </div>
        <div class="col-sm-6 col-form">
            <textarea asp-for="Labs.OtherVarietyComments" rows="1" cols="30" ></textarea>
        </div>
    </div> 
}
@if(Model.Standards.OtherCropType != null)
{
    <div class="form-group row">
        <label asp-for="Labs.OtherCropPercent" class="col-sm-3 col-form-label"></label>
        <div class="col-sm-3 col-form">
            @if(Model.Standards.OtherCropType == "R")
            {
                @if(ViewData.ModelState.GetFieldValidationState("Labs.OtherCropPercent")  == Microsoft.AspNetCore.Mvc.ModelBinding.ModelValidationState.Invalid)
                {
                    errorClass = "input-validation-error";
                } else 
                {
                    errorClass = "";
                } 
                <input class="@errorClass" type="text" data-val="true" data-val-number="The field Other Crop value must be a number." data-val-range="The field Other Crop value must be between 0 and 100." data-val-range-max="100" data-val-range-min="0" data-val-required="The Other Crop value field is required." id="Labs_OtherCropPercent" name="Labs.OtherCropPercent" value="@Model.Labs.OtherCropValue">
            } else if(Model.Standards.OtherCropType == "C")
            {
                <input asp-for="Labs.OtherCropCount" >
            }
        </div>
        <div class="col-sm-6 col-form">
            <textarea asp-for="Labs.OtherCropComments" rows="1" cols="30" ></textarea>
        </div>
    </div> 
}
@if(Model.Standards.WeedSeedType != null)
{
    <div class="form-group row">
        <label asp-for="Labs.WeedSeedPercent" class="col-sm-3 col-form-label"></label>
        <div class="col-sm-3 col-form">
            @if(Model.Standards.WeedSeedType == "R")
            {
                @if(ViewData.ModelState.GetFieldValidationState("Labs.WeedSeedPercent")  == Microsoft.AspNetCore.Mvc.ModelBinding.ModelValidationState.Invalid)
                {
                    errorClass = "input-validation-error";
                } else 
                {
                    errorClass = "";
                }                 
               <input class="@errorClass" type="text" data-val="true" data-val-number="The field Weed Seed value must be a number." data-val-range="The field Weed Seed value must be between 0 and 100." data-val-range-max="100" data-val-range-min="0" data-val-required="The Weed Seed value field is required." id="Labs_WeedSeedPercent" name="Labs.WeedSeedPercent" value="@Model.Labs.WeedSeedValue">
            } else if(Model.Standards.WeedSeedType == "C")
            {
                <input asp-for="Labs.WeedSeedCount" >
            }
        </div>
        <div class="col-sm-6 col-form">
            <textarea asp-for="Labs.WeedSeedComments" rows="1" cols="30" ></textarea>
        </div>
    </div> 
}
@if(Model.Standards.ShowBeans)
{
    <div class="form-group row">
        <label asp-for="Labs.ForeignMaterialPercent" class="col-sm-3 col-form-label"></label>
        <div class="col-sm-3 col-form">
            @if(ViewData.ModelState.GetFieldValidationState("Labs.ForeignMaterialPercent")  == Microsoft.AspNetCore.Mvc.ModelBinding.ModelValidationState.Invalid)
            {
                errorClass = "input-validation-error";
            } else 
            {
                errorClass = "";
            }             
            <input class="@errorClass" type="text" data-val="true" data-val-number="The field Foreign Material value must be a number." data-val-range="The field Foreign Material value must be between 0 and 100." data-val-range-max="100" data-val-range-min="0" data-val-required="The Foreign Material value field is required." id="Labs_ForeignMaterialPercent" name="Labs.ForeignMaterialPercent" value="@Model.Labs.ForeignMaterialValue">
        </div>
        <div class="col-sm-6 col-form">
            <textarea asp-for="Labs.ForeignMaterialsComments" rows="1" cols="30" ></textarea>
        </div>
    </div> 
    <div class="form-group row">
        <label asp-for="Labs.SplitsAndCracksPercent" class="col-sm-3 col-form-label"></label>
        <div class="col-sm-3 col-form">
            @if(ViewData.ModelState.GetFieldValidationState("Labs.SplitsAndCracksPercent")  == Microsoft.AspNetCore.Mvc.ModelBinding.ModelValidationState.Invalid)
            {
                errorClass = "input-validation-error";
            } else 
            {
                errorClass = "";
            }   
            <input class="@errorClass" type="text" data-val="true" data-val-number="The field Splits & Cracks value must be a number." data-val-range="The field Splits & Cracks value must be between 0 and 100." data-val-range-max="100" data-val-range-min="0" data-val-required="The Splits & Cracks value field is required." id="Labs_SplitsAndCracksPercent" name="Labs.SplitsAndCracksPercent" value="@Model.Labs.SplitsAndCracksValue">
        </div>
    </div> 
    <div class="form-group row">
        <label asp-for="Labs.BadlyDiscoloredPercent" class="col-sm-3 col-form-label"></label>
        <div class="col-sm-3 col-form">
            @if(ViewData.ModelState.GetFieldValidationState("Labs.BadlyDiscoloredPercent")  == Microsoft.AspNetCore.Mvc.ModelBinding.ModelValidationState.Invalid)
            {
                errorClass = "input-validation-error";
            } else 
            {
                errorClass = "";
            } 
            <input class="@errorClass" type="text" data-val="true" data-val-number="The field Badly Discolored value must be a number." data-val-range="The field Badly Discolored value must be between 0 and 100." data-val-range-max="100" data-val-range-min="0" data-val-required="The Badly Discolored value field is required." id="Labs_BadlyDiscoloredPercent" name="Labs.BadlyDiscoloredPercent" value="@Model.Labs.BadlyDiscoloredValue">
        </div>
    </div> 
    <div class="form-group row">
        <label asp-for="Labs.ChewingInsectDamagePercent" class="col-sm-3 col-form-label"></label>
        <div class="col-sm-3 col-form">
            @if(ViewData.ModelState.GetFieldValidationState("Labs.ChewingInsectDamagePercent")  == Microsoft.AspNetCore.Mvc.ModelBinding.ModelValidationState.Invalid)
            {
                errorClass = "input-validation-error";
            } else 
            {
                errorClass = "";
            } 
            <input class="@errorClass" type="text" data-val="true" data-val-number="The field Chewing Insect Damage value must be a number." data-val-range="The field Chewing Insect Damage value must be between 0 and 100." data-val-range-max="100" data-val-range-min="0" data-val-required="The Chewing Insect Damage value field is required." id="Labs_ChewingInsectDamagePercent" name="Labs.ChewingInsectDamagePercent" value="@Model.Labs.ChewingInsectDamageValue">
        </div>
    </div> 
}
<div class="form-group row">
    <label asp-for="Labs.PurityGrams" class="col-sm-3 col-form-label"></label>
    <div class="col-sm-3 col-form">
        <input asp-for="Labs.PurityGrams" >
    </div>
</div> 
<div class="form-group row">
    <label asp-for="Labs.NoxiousCount" class="col-sm-3 col-form-label"></label>
    <div class="col-sm-3 col-form">
        <input asp-for="Labs.NoxiousCount" >
    </div>
    <div class="col-sm-6 col-form">
        <textarea asp-for="Labs.NoxiousComments" rows="1" cols="30" ></textarea>
    </div>
</div>  
<div class="form-group row">
    <label asp-for="Labs.NoxiousGrams" class="col-sm-3 col-form-label"></label>
    <div class="col-sm-3 col-form">
        <input asp-for="Labs.NoxiousGrams" >
    </div>
</div> 
@if(Model.Standards.ShowBushelWeight)
{
    <div class="form-group row">
        <label asp-for="Labs.BushelWeight" class="col-sm-3 col-form-label"></label>
        <div class="col-sm-3 col-form">
            <input asp-for="Labs.BushelWeight" >
        </div>
    </div>  
}
<div class="row">
    <div class="col-12">
        <hr>
    </div>
</div>   
<div class="form-group row">
    <label asp-for="Labs.GermPercent" class="col-sm-3 col-form-label"></label>
    <div class="col-sm-3 col-form">
        @if(ViewData.ModelState.GetFieldValidationState("Labs.GermPercent")  == Microsoft.AspNetCore.Mvc.ModelBinding.ModelValidationState.Invalid)
        {
            errorClass = "input-validation-error";
        } else 
        {
            errorClass = "";
        } 
        <input class="@errorClass" type="text" data-val="true" data-val-number="The field Germination value must be a number." data-val-range="The field Germination value must be between 0 and 100." data-val-range-max="100" data-val-range-min="0" data-val-required="The Germination value field is required." id="Labs_GermPercent" name="Labs.GermPercent" value="@Model.Labs.GermValue">        
    </div>
</div>
<div class="form-group row">
    <label asp-for="Labs.HardSeedPercent" class="col-sm-3 col-form-label"></label>
    <div class="col-sm-3 col-form">
        @if(ViewData.ModelState.GetFieldValidationState("Labs.HardSeedPercent")  == Microsoft.AspNetCore.Mvc.ModelBinding.ModelValidationState.Invalid)
        {
            errorClass = "input-validation-error";
        } else 
        {
            errorClass = "";
        } 
        <input class="@errorClass" type="text" data-val="true" data-val-number="The field Hard Seed value must be a number." data-val-range="The field Hard Seed value must be between 0 and 100." data-val-range-max="100" data-val-range-min="0" data-val-required="The Hard Seed value field is required." id="HardSeedPercent" name="Labs.HardSeedPercent" value="@Model.Labs.GermHardSeedValue">
    </div>
</div> 
@if(Model.Standards.ShowAssay1) 
    {<div class="form-group row">
        <label class="col-sm-3 col-form-label">@Model.Standards.Assay1Name</label>
        <div class="col-sm-3 col-form">
             <select asp-for="Labs.AssayTest">
                <option value="true">Positive</option>
                <option value="false">Negative</option>
            </select>
        </div>
    </div>
}
@*
@if(Model.Standards.ShowAssay2)
{   
    <div class="form-group row">
        <label class="col-sm-3 col-form-label">@Model.Standards.Assay2Name</label>
        <div class="col-sm-3 col-form">
            <select asp-for="Labs.AssayTest2">
                <option value="true">Positive</option>
                <option value="false">Negative</option>
            </select>
        </div>
    </div> 
}
*@
@if(Model.Standards.ShowDodderGrams)
{   
    <div class="form-group row">
        <label asp-for="Labs.DodderGrams" class="col-sm-3 col-form-label"></label>
        <div class="col-sm-3 col-form">
            <input asp-for="Labs.DodderGrams" >
        </div>
    </div> 
}
<div class="form-group row">
    <label asp-for="Labs.PrivateLabDate" class="col-sm-3 col-form-label"></label>    
    <div class="col-sm-3 col-form input-group">
        <input asp-for="Labs.PrivateLabDate" class="form-control datepicker" placeholder="MM/DD/YYYY" type="text" />  
        <div class="input-group-append" onclick="$('.datepicker').focus();">             
            <i class="fa fa-calendar input-group-text"></i>
        </div>
    </div>   
</div> 
<div class="form-group row">
    <label class="col-sm-3 col-form-label">Lab</label>
    <div class="col-sm-3 col-form">
        <select asp-for="Labs.PrivateLabId" class="form-control" asp-items="@(new SelectList(Model.PrivateLabs, "Id","Name"))"></select>
    </div>
</div>
<div class="form-group row">
    <label asp-for="Labs.PrivateLabNumber" class="col-sm-3 col-form-label"></label>
    <div class="col-sm-3 col-form">
        <input asp-for="Labs.PrivateLabNumber">
    </div>
</div>
<div class="form-group row">
    <label asp-for="Labs.Comments" class="col-sm-3 col-form-label"></label>
    <div class="col-sm-3 col-form">
        <textarea asp-for="Labs.Comments" rows="5" cols="60" ></textarea>
    </div>
</div> 
<div class="form-group row">
    <label asp-for="SubmitAsRejected" class="col-sm-3 col-form-label">Submit as Rejected</label>
    <div class="col-sm-3 col-form">
        <input type="checkbox" class="form-control" asp-for="SubmitAsRejected">
    </div>
</div>
<div class="form-group row">
    <div class="col-sm-3">     
    </div>
    <div class="col-sm-3">
        <input type="submit" value="Submit Results" class="btn btn-primary" />    
    </div>
</div>
</form>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    <script src="https://ajax.aspnetcdn.com/ajax/jquery.ui/1.12.1/jquery-ui.js"></script>
    
    <script type="text/javascript">
        $('.datepicker').datepicker({            
            format: 'LT',
            autoclose: "true",
        })
    </script>
}