@model CCIA.Models.AdminMapFieldsViewModel
@{
    Layout = "_LayoutNoFooter";
}
<link href="/css/GoogleMaps.css" rel="stylesheet" type="text/css" />


<div class="row">
    <a class="btn btn-info" asp-action="Details" asp-area="client" asp-controller="Application" asp-route-id="@Model.details.application.Id">Return to Details</a>
</div> 
<input type="hidden" id="data" value="@Model.data">



<div id="map" class="embed-responsive-item embed-responsive-1by1" style="min-height: 600px; min-width: 600px"></div>

@section Scripts {

    <script>
        (g => { var h, a, k, p = "The Google Maps JavaScript API", c = "google", l = "importLibrary", q = "__ib__", m = document, b = window; b = b[c] || (b[c] = {}); var d = b.maps || (b.maps = {}), r = new Set, e = new URLSearchParams, u = () => h || (h = new Promise(async (f, n) => { await (a = m.createElement("script")); e.set("libraries", [...r] + ""); for (k in g) e.set(k.replace(/[A-Z]/g, t => "_" + t[0].toLowerCase()), g[k]); e.set("callback", c + ".maps." + q); a.src = `https://maps.${c}apis.com/maps/api/js?` + e; d[q] = f; a.onerror = () => h = n(Error(p + " could not load.")); a.nonce = m.querySelector("script[nonce]")?.nonce || ""; m.head.append(a) })); d[l] ? console.warn(p + " only loads once. Ignoring:", g) : d[l] = (f, ...n) => r.add(f) && u().then(() => d[l](f, ...n)) })({
            key: "@ViewBag.GoogleAPIKey",
            v: "weekly",
        });
    </script>
    <script type="text/javascript" src="/js/Maps/GMaps.js"></script>

}

