@model CCIA.Models.SeedApp

@{
    ViewData["Title"] = "Seed Application";
}

<section class="app-header">
    <h2>Application to Produce Certified Seed</h2>
    <h5>@Model.AppViewModel.Organization.OrgName</h5>
</section>

<div id="errors" class="text-danger">
    @Html.ValidationSummary()
</div>

<partial name="Shared/_GrowerInfoTable"></partial>

<form action="/Application/CreateSeedApplication" method="post" id="seedApplication">

    @Html.AntiForgeryToken()

    <div class="row">
        <div class="form-group col-lg-4 col-sm-4 col-xs-4">
            @{ViewBag.name = "CropId";}
            <partial name="Shared/_CropDropdown"></partial>
            @Html.ValidationMessage("CropId", "", new { @class = "text-danger" })
        </div>
    
        <div class="form-group col-lg-4 col-sm-4 col-xs-4">
            @{
                ViewBag.name = "CertYear";
                ViewBag.startYearOffset = 1;
                ViewBag.endYearOffset = 1;
            }
            @await Html.PartialAsync("Shared/_CropYearDropdown")
            @Html.ValidationMessage("CropYear", "", new { @class = "text-danger" })
        </div>
        <div class="col-lg-4 col-sm-4 col-xs-4"> 
            @{ ViewData["varietyName"] = "EnteredVariety"; } 
            @await Html.PartialAsync("Shared/_VarietySelect")
        </div>
    </div>

    <div id="form-remainder">
        @if (@Model.AppViewModel.RenderFormRemainder)
        {
            @await Html.PartialAsync("Seed/SeedAppPartial")
        }
    </div>

    <!-- Hidden fields -->
    @Html.TextBox("SelectedVarietyId", "", new { type="hidden", id="variety-id" })
    @Html.TextBox("AppSpecificPlantingStocks[0].OfficialVarietyId", "", new { type="hidden", id="ps1-variety-id" })
    <input type="hidden" readonly="readonly" class="form-control" id="app-type-id" name="AppType" value="SD">

    <!-- Alert dialog modals -->
    @{
        var cropAlert = new AlertViewModel("cropAlert", "Error: A crop must be selected.", "Please select a crop before searching for a variety.", "Close", "Ok");
        var varietyAlert = new AlertViewModel("varAlert", "Warning: No variety found", "No variety with the entered name was found in our system. A new variety will be used.", "Close", "Ok");
        var emptyVarietyAlert = new AlertViewModel("emptyVarAlert", "Variety cannot be blank", "Please enter a variety name before searching for a variety.", "Close", "Ok");
    }
    @await Html.PartialAsync("~/Views/Shared/_AlertModal.cshtml", cropAlert)
    @await Html.PartialAsync("~/Views/Shared/_AlertModal.cshtml", varietyAlert)
    @await Html.PartialAsync("~/Views/Shared/_AlertModal.cshtml", emptyVarietyAlert)
</form>

@section Scripts {
    <script type="text/javascript">
        var orgId = @Model.AppViewModel.Organization.OrgId;
        var growerId = @Model.AppViewModel.Organization.OrgId;
        var renderFormRemainder = "@Model.AppViewModel.RenderFormRemainder".toLocaleLowerCase();
        var appTypeId = @Model.AppViewModel.AppTypeId;
        // How many field history records are possible for this application
        let maxFieldHistories = @Model.AppViewModel.MaxFieldHistoryRecords;
        let secondPsRendered = false;
        let fhEntryId = -1;

        // Converting our fixed-size array of booleans from the model to a JavaScript array
        // for use with removing/adding field history entries
        let fhIndices = @Model.AppViewModel.FieldHistoryIndices;

        // Counts the occurrences of used spaces in fhIndices\
        // Used spaces are indicated by 1s. Free spaces are marked with 0s.
        let fhEntryCount = countOccurrences(1, fhIndices);
    </script>
    <script src="https://ajax.aspnetcdn.com/ajax/jquery.ui/1.12.1/jquery-ui.js"></script>
    <script src="~/js/applications/applications.js" asp-append-version="true"></script>
    <script src="~/js/applications/seed.js" asp-append-version="true"></script>
}