@model CCIA.Models.NewMapViewModel
<link href="/css/GoogleMaps.css" rel="stylesheet" type="text/css" />

<br>
<div>
    Latitude:
    <input id="txtLat" size="10" type="text" />
    &nbsp;Longitude:
    <input id="txtLong" size="10" type="text" />&nbsp;
    <input id="Button20" onclick="Panmap();" type="button" value="Zoom to" />
    Zoom to county: &nbsp;<select id="county_name" onchange="zoom_county();">
        <option selected="selected">Select county...</option>
        <option>ALAMEDA</option>
        <option>ALPINE</option>
        <option>AMADOR</option>
        <option>BUTTE</option>
        <option>CALAVERAS</option>
        <option>COLUSA</option>
        <option>CONTRA COSTA</option>
        <option>DEL NORTE</option>
        <option>EL DORADO</option>
        <option>FRESNO</option>
        <option>GLENN</option>
        <option>HUMBOLDT</option>
        <option>IMPERIAL</option>
        <option>INYO</option>
        <option>KERN</option>
        <option>KINGS</option>
        <option>LAKE</option>
        <option>LASSEN</option>
        <option>LOS ANGELES</option>
        <option>MADERA</option>
        <option>MARIN</option>
        <option>MARIPOSA</option>
        <option>MENDOCINO</option>
        <option>MERCED</option>
        <option>MODOC</option>
        <option>MONO</option>
        <option>MONTEREY</option>
        <option>NAPA</option>
        <option>NEVADA</option>
        <option>ORANGE</option>
        <option>PLACER</option>
        <option>PLUMAS</option>
        <option>RIVERSIDE</option>
        <option>SACRAMENTO</option>
        <option>SAN BENITO</option>
        <option>SAN BERNARDINO</option>
        <option>SAN DIEGO</option>
        <option>SAN FRANCISCO</option>
        <option>SAN JOAQUIN</option>
        <option>SAN LUIS OBISPO</option>
        <option>SAN MATEO</option>
        <option>SANTA BARBARA</option>
        <option>SANTA CLARA</option>
        <option>SANTA CRUZ</option>
        <option>SHASTA</option>
        <option>SIERRA</option>
        <option>SISKIYOU</option>
        <option>SOLANO</option>
        <option>SONOMA</option>
        <option>STANISLAUS</option>
        <option>SUTTER</option>
        <option>TEHAMA</option>
        <option>TRINITY</option>
        <option>TULARE</option>
        <option>TUOLUMNE</option>
        <option>VENTURA</option>
        <option>YOLO</option>
        <option>YUBA</option>
    </select>
</div>
<hr>
<div>
    <form method="post" id="newMap">
        @if (Model.showLink)
        {
            <div class="form-group row">
                <label class="col-sm-8 col-form-label">This field is linked to an isolation map field. You can update both maps, or just the application map. This will not generate new isolation warning emails.<a href="#"></a> Update Both?</label>
                <input type="checkbox" name="updateBoth" id="updateBoth" checked class="form-control col-sm-1">
            </div>
        }
        else
        {
            <div>This field does not appear to be linked to an isolation map field.</div>
        }
        @* <input type="text" id="newPolygon" name="newPolygon" value="test"> *@
        <textarea id="newPolygon" name="newPolygon" cols="100" rows="5">text</textarea>
        <input type="hidden" id="id" name="id" value="@Model.application.Id" />
        <input type="submit" value="Update Map">
    </form>
</div>
<div id="map" class="embed-responsive-item embed-responsive-4by3" style="min-height: 800px; min-width: 600px"></div>

@section Scripts {
		
        <script>
            (g => { var h, a, k, p = "The Google Maps JavaScript API", c = "google", l = "importLibrary", q = "__ib__", m = document, b = window; b = b[c] || (b[c] = {}); var d = b.maps || (b.maps = {}), r = new Set, e = new URLSearchParams, u = () => h || (h = new Promise(async (f, n) => { await (a = m.createElement("script")); e.set("libraries", [...r] + ""); for (k in g) e.set(k.replace(/[A-Z]/g, t => "_" + t[0].toLowerCase()), g[k]); e.set("callback", c + ".maps." + q); a.src = `https://maps.${c}apis.com/maps/api/js?` + e; d[q] = f; a.onerror = () => h = n(Error(p + " could not load.")); a.nonce = m.querySelector("script[nonce]")?.nonce || ""; m.head.append(a) })); d[l] ? console.warn(p + " only loads once. Ignoring:", g) : d[l] = (f, ...n) => r.add(f) && u().then(() => d[l](f, ...n)) })({
                key: "@ViewBag.GoogleAPIKey",
                v: "weekly",
            });
        </script>
        <script type="text/javascript" src="/js/Maps/GMaps.js"></script>
        
        
   
    
}