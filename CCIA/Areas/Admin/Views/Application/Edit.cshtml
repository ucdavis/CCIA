@model CCIA.Models.DetailsViewModels.AdminViewModel
@{
    bool showPurchasedFrom = false;
    bool showPounds = false;
    bool showPlantsPerAcre = false;
    bool showTHC = false;
}

<!-- Modal -->
<div class="modal fade" id="lookupOrgModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
  <div class="modal-dialog modal-lg" role="document">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title" id="exampleModalLabel">Look Up Org</h5>
        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
          <i class="fa fa-window-close"></i>
        </button>
      </div>
      <div class="modal-body">
         <label for="account">Name or Account Number:</label>
        <div class="input-group col">
            <input type="text" class="form-control" id="account" placeholder="Enter the organization's name or account number">
            <span class="input-group-btn">
                <button class="btn btn-primary" id="account-lookup-btn"><i id="account-lookup-btn" class="fas fa-search"></i></button>                    
            </span>
        </div>
        <input type="hidden" id="lookupType" value=""/>
        <div id="orgTable"></div>
      </div>
      <div class="modal-footer">
        <button type="button" class="btn btn-dark" data-dismiss="modal">Close</button>
      </div>
    </div>
  </div>
</div>

<h2>Edit Application Details</h2> 
<form asp-action="Edit">
    @Html.HiddenFor(x => x.application.Id)
<div class="container">
    <div class="row">
        <div class="col-lg-12">
            <div asp-validation-summary="All" class="text-danger"></div>
            <input type="submit"></input>            
        </div>
        <div class="col-lg-6">
                <div class="form-group row">
                    <label asp-for="application.Id" class="col-sm-3 col-form-label"></label>
                    <div class="col-sm-9 form-control-plaintext">
                        @Html.DisplayFor(x => x.application.Id)
                    </div>
                </div>
                <div class="form-group row">
                    <label asp-for="application.FullCert" class="col-sm-3 col-form-label"></label>
                    <div class="col-sm-9 form-control-plaintext">
                        @Html.DisplayFor(x => x.application.FullCert)
                    </div>
                </div>
                <div class="form-group row">
                    <label asp-for="application.Status" class="col-sm-3 col-form-label"></label>
                    <div class="col-sm-9 form-control-plaintext">
                        @Html.DisplayFor(x => x.application.Status)
                    </div>
                </div> 
                <div class="form-group row">
                    <label asp-for="application.Received" class="col-sm-3 col-form-label"></label>
                    <div class="col-sm-9 form-control-plaintext">
                        @Html.DisplayFor(x => x.application.Received)
                    </div>
                </div> 
                <div class="form-group row required">
                    <label asp-for="application.DatePlanted" class="col-sm-3 col-form-label"></label>
                    <div class="col-sm-9 input-group">
                        <input type="text" asp-for="application.DatePlanted" class="datepicker form-control"></input>
                        <div class="input-group-append" onclick="$('.datepicker').focus();">             
                            <i class="fa fa-calendar input-group-text"></i>
                        </div>                        
                    </div>
                    <span class="field-validation-valid text-danger" data-valmsg-for="application.DatePlanted" data-valmsg-replace="true"></span>
                </div>                                  
                <div class="form-group row">
                    <label asp-for="application.WarningFlag" class="col-sm-3 col-form-label"></label>
                    <div class="col-sm-9 form-control-plaintext">
                        @Html.DisplayFor(x => x.application.WarningFlag)
                        @Html.DisplayFor(x => x.application.ApplicantNotes)
                    </div>
                </div> 
                <div class="form-group row">
                    <label asp-for="application.Renewal" class="col-sm-3 col-form-label"></label>
                    <div class="col-sm-9 form-control-plaintext">
                        @Html.DisplayFor(x => x.application.Renewal)
                    </div>
                </div>                  
                <div class="form-group row">
                    <label asp-for="application.ApplicantOrganization.NameAndId" class="col-sm-3 col-form-label">Applicant</label>                    
                    <input type="text" asp-for="application.ApplicantOrganization.NameAndId" class="col-sm-8 form-control" disabled>
                    <div class="input-group-append"> 
                        <button type="button" class="btn btn-primary" data-toggle="modal" data-target="#lookupOrgModal" data-whatever="Applicant"><i class="fa fa-exchange-alt"></i></button>                            
                    </div>  
                    @Html.HiddenFor(x => x.application.ApplicantId)                              
                </div>
                <div class="form-group row">
                    <label asp-for="application.Crop.Name" class="col-sm-3 col-form-label"></label>
                    <select required asp-for="application.CropId" class="col-sm-9 col-form-control" asp-items="@(new SelectList(Model.Crops, "CropId", "Name"))"></select>                   
                </div>
                <div class="form-group row">
                    <label asp-for="application.ClassProduced.ClassProducedTrans" class="col-sm-3 col-form-label">Class</label>
                    <div class="col-sm-9 form-control-plaintext">
                        @Html.DisplayFor(x => x.application.ClassProduced.ClassProducedTrans)
                    </div>
                </div>
                <div class="form-group row">
                    <label asp-for="application.MapVe" class="col-sm-3 col-form-label"></label>
                    <div class="col-sm-9 form-control-plaintext">
                        @Html.CheckBox("MapsVe", Model.application.MapVe ?? false, new {@disabled = true})
                    </div>
                </div>
                 <div class="form-group row">
                    <label asp-for="application.FieldName" class="col-sm-3 col-form-label"></label>
                    <div class="col-sm-9 form-control-plaintext">
                        @Html.DisplayFor(x => x.application.FieldName)
                    </div>
                </div> 
                <div class="form-group row">
                    <label asp-for="application.County.CountyName" class="col-sm-3 col-form-label"></label>
                    <div class="col-sm-9 form-control-plaintext">
                        @Html.DisplayFor(x => x.application.County.CountyName)
                    </div>
                </div>   
        </div>
        <div class="col-lg-6">
                <div class="form-group row">
                    <label asp-for="application.AppType" class="col-sm-3 col-form-label"></label>                    
                    <select required asp-for="application.AppType" class="col-sm-9 col-form-control" asp-items="@(new SelectList(Model.AppTypes))"></select>
                </div>                
                <div class="form-group row required">
                    <label class="col-sm-3 col-form-label" asp-for="application.CertYear"></label>
                    <input asp-for="application.CertYear" class="col-sm-3 col-form-label"></input>
                    <span class="field-validation-valid text-danger" data-valmsg-for="CertYear" data-valmsg-replace="true"></span>
                </div>
                <div class="form-group row">
                    <label asp-for="application.AppType" class="col-sm-3 col-form-label"></label>
                    <div class="col-sm-9 form-control-plaintext">
                        @Html.DisplayFor(x => x.application.AppTypeTrans.AppTypeTrans)
                    </div>
                </div>   
                <div class="form-group row required">
                    <label asp-for="application.Postmark" class="col-sm-3 col-form-label"></label>
                     <div class="col-sm-9 input-group">
                        <input type="text" asp-for="application.Postmark" class="datepicker form-control" data-val="true" data-val-required="The Submitted Date field is required."></input>
                        <div class="input-group-append" onclick="$('.datepicker').focus();">             
                            <i class="fa fa-calendar input-group-text"></i>
                        </div>                        
                    </div>
                    <span class="field-validation-valid text-danger" data-valmsg-for="application.Postmark" data-valmsg-replace="true"></span>                    
                </div>                 
                <div class="form-group row">
                    <label asp-for="application.Deadline" class="col-sm-3 col-form-label"></label>
                    <div class="col-sm-9 form-control-plaintext">
                        @Html.DisplayFor(x => x.application.Deadline) 
                    </div>
                </div>                   
                <div class="form-group row">
                    <label asp-for="application.AppLate" class="col-sm-3 col-form-label"></label>
                    <div class="col-sm-9 form-control-plaintext">
                        @Html.DisplayFor(x => x.application.AppLate) Override? <input asp-for="application.OverrideLateFee" class="col-form-control">
                    </div>
                </div> 
                <div class="form-group row">
                    <label asp-for="application.OriginalCertYear" class="col-sm-3 col-form-label"></label>
                    <div class="col-sm-9 form-control-plaintext">
                        @Html.DisplayFor(x => x.application.OriginalCertYear) Prev App: @Html.DisplayFor(x => x.application.PaperAppNum)
                    </div>
                </div>                      
                <div class="form-group row">
                    <label asp-for="application.GrowerOrganization.NameAndId" class="col-sm-3 col-form-label">Grower</label>                   
                    <input type="text" asp-for="application.GrowerOrganization.NameAndId" class="col-sm-8 form-control" disabled>
                    <div class="input-group-append"> 
                        <button type="button" class="btn btn-primary" data-toggle="modal" data-target="#lookupOrgModal" data-whatever="Grower"><i class="fa fa-exchange-alt"></i></button>                            
                    </div> 
                    @Html.HiddenFor(x => x.application.GrowerId)
                </div>
                <div class="form-group row">
                    <label asp-for="application.EnteredVariety" class="col-sm-3 col-form-label"></label>
                    <div class="col-sm-9 form-control-plaintext">
                        @Html.DisplayFor(x => x.application.EnteredVariety)
                    </div>
                </div>
                <div class="form-group row">
                    <label asp-for="application.Variety.Name" class="col-sm-3 col-form-label"></label>
                    <div class="col-sm-9 form-control-plaintext">
                        @Html.DisplayFor(x => x.application.Variety.Name)
                    </div>
                </div>
                <div class="form-group row">
                    <label asp-for="application.AcresApplied" class="col-sm-3 col-form-label">Acres</label>
                    <div class="col-sm-9 form-control-plaintext">
                        @Html.DisplayFor(x => x.application.AcresApplied)
                    </div>
                </div>
                 <div class="form-group row">
                    <label asp-for="application.PackageComplete" class="col-sm-3 col-form-label"></label>
                    <div class="col-sm-9 form-control-plaintext">
                        @Html.DisplayFor(x => x.application.PackageComplete)
                    </div>
                </div>
        </div>
    </div>
    <div class="form-group row">
        <label asp-for="application.ApplicantComments" class="col-sm-3 col-form-label"></label>
        <div class="col-sm-9 form-control-plaintext">
            @Html.DisplayFor(x => x.application.ApplicantComments)
        </div>
    </div>
        <div class="form-group row">
        <label asp-for="application.Comments" class="col-sm-3 col-form-label"></label>
        <div class="col-sm-9 form-control-plaintext">
            @Html.DisplayFor(x => x.application.Comments)
        </div>
    </div>
</div>
<div class="container">
    <div class="col-lg-1 row">
        <label class="col-form-label">Certificates/Tags</label>
        <table class="table">
            <thead>
                <tr>
                    <th>Link</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var row in Model.application.Certificates)
                {
                    <tr>
                        <td>
                            Filedownload -
                            @row.Link
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
     <div class="row">
        <hr />
    </div>
    <div class="row">
        <label class="col-form-label">Planting Stock Info</label>
        <table class="table">
            <thead>
                <tr>
                    <th>Cert#</th>
                    <th>Variety</th>
                    @if(Model.application.PlantingStocks.First().PoundsPlanted != null || Model.application.PlantingStocks.Last().PoundsPlanted != null)
                    {
                        showPounds = true;
                        <th>Pounds Planted</th>
                    } 
                    @if(Model.application.PlantingStocks.First().PlantsPerAcre != null || Model.application.PlantingStocks.Last().PlantsPerAcre != null)
                    { 
                        showPlantsPerAcre = true;                       
                        <th>Plants/Acre</th>
                    }                 
                    <th>Class</th>
                    <th>Tag Issued</th>
                    <th>Grown</th>
                    @if(Model.application.PlantingStocks.First().SeedPurchasedFrom != null || Model.application.PlantingStocks.Last().SeedPurchasedFrom != null)
                    {
                        showPurchasedFrom = true;
                        <th>Purchased From</th>
                    } 
                    @if(Model.application.AppType == "PO")
                    {
                        <th>Winter test?</th>
                        <th>PVX test?</th>
                    }
                    @if(Model.application.PlantingStocks.First().ThcPercent != null || Model.application.PlantingStocks.Last().ThcPercent != null)
                    {
                        showTHC = true;
                        <th>THC%</th>
                    } 
                </tr>
            </thead>
            <tbody>
                @foreach (var row in Model.application.PlantingStocks)
                {
                    <tr>
                        <td>
                            @row.PsCertNum
                        </td>
                        <td>@row.PsEnteredVariety</td>
                        @if(showPounds)
                        {
                            <td>@row.PoundsPlanted</td>
                        }
                        @if(showPlantsPerAcre)
                        {
                            <td>@row.PlantsPerAcre</td>
                        }                        
                        <td>@row.PsClassNavigation.ClassProducedTrans</td>
                        @if(@row.TaggedStateProvince == null)
                        {
                            <td>@row.StateCountryTagIssued</td>
                        } else if(@row.GrownStateProvince.StateProvinceName != null)
                        {
                            <td>@row.TaggedStateProvince.StateProvinceName</td>
                        }  else {
                            <td>&nbsp;</td>
                        }                      
                        <td>@row.GrownStateProvince.StateProvinceName</td>
                        <td>@row.SeedPurchasedFrom</td>
                        @if(Model.application.AppType == "PO")
                        {
                            <td>@Html.DisplayFor(x => row.PvxTest.Value)</td>
                            <td>@Html.DisplayFor(x => row.PvxTest.Value)</td>
                        }
                        @if(showTHC)
                        {
                            <td>@row.ThcPercent</td>
                        }
                    </tr>
                }
            </tbody>
        </table>
    </div>
    <div class="row">
        <hr />
    </div>  
    <div class="row">
        <label class="col-form-label">Field History</label>
        <table class="table">
            <thead>
            <tr>
                <th>Year</th>
                <th>Crop</th>
                <th>Variety</th>
                <th>Application #</th>
            </tr>
            </thead>
            <tbody>
            @foreach (var row in Model.application.FieldHistories)
            {
                <tr>
                    <td>@row.Year</td>
                    <td>@row.FHCrops.Name</td>
                    <td>@row.Variety</td>
                    <td>@row.AppNumber</td>
                </tr>
            }
            </tbody>
        </table>
    </div>
    <div class="row">
        <h3>Changes made to this application:</h3>
        <table class="table">
            <thead>
            <tr>
                <th>column</th>
                <th>Old Value</th>
                <th>New Value</th>
                <th>Date</th>
                <th>Person</th>
            </tr>
            </thead>
            <tbody>
            @foreach (var row in Model.application.Changes)
            {
                <tr>
                    <td>@row.ColumnChange</td>
                    <td>@row.OldValue</td>
                    <td>@row.NewValue</td>
                    <td>@row.DateChanged</td>
                    <td>@row.Employee.Name</td>
                </tr>
            }
            </tbody>
        </table>
    </div>    
</div>
</form>
@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    <script src="https://ajax.aspnetcdn.com/ajax/jquery.ui/1.12.1/jquery-ui.js"></script>   
    
     <script type="text/javascript">
        $(document).ready(function () {
            $('.datepicker').datepicker();
        });

        $('#lookupOrgModal').on('show.bs.modal', function (event) {
            var button = $(event.relatedTarget) // Button that triggered the modal
            var recipient = button.data('whatever') // Extract info from data-* attributes
            // If necessary, you could initiate an AJAX request here (and then do the updating in a callback).
            // Update the modal's content. We'll use jQuery here, but you could use a data binding library or other methods instead.           
            var modal = $(this)
            modal.find('.modal-title').text('Look Up ' + recipient + ' Org');
            modal.find('#lookupType').val(recipient);
            modal.find("#account").val("");
            modal.find("#orgTable").empty();
            //modal.find('.modal-body input').val(recipient) 
        })

        $('#account-lookup-btn').click(function(e){
            e.preventDefault();
            var lookup = $("#account").val();
            if (lookup === "") {
                alert("This field cannot be empty.");
                return;
            }
            $("#orgTable").empty();
            $("#orgTable").load("/admin/Application/LookupOrg?lookup="+lookup, (response, status, xhr) => {
                        if ( status == "error" ) {
                            var msg = "Sorry, the following error occurred: ";
                            $( "#error" ).html( msg + xhr.status + " " + xhr.statusText );
                        }
                });
        });

        function useOrg(e,orgId, orgNameAndId)
        {
            e.preventDefault();
            var lookupType = $("#lookupType").val();
            //console.log(lookupType);
            //alert(orgName);
            if(lookupType === "Applicant")
            {
                $("#application_ApplicantId").val(orgId);
                $("#application_ApplicantOrganization_NameAndId").val(orgNameAndId);
            }
            if(lookupType === "Grower")
            {
                $("#application_GrowerId").val(orgId);
                $("#application_GrowerOrganization_NameAndId").val(orgNameAndId);
            }
            $("#lookupOrgModal").modal('hide');                       

        }
    </script>
}
