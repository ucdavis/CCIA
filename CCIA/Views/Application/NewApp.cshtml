@{
    ViewData["Title"] = "Application Type";
}

<h1>Select an Application Type</h1>
<div class="form-group">
    <label>Application Type:</label>
    <div class="dropdown">
        <button class="btn btn-secondary dropdown-toggle" type="button" data-toggle="dropdown" name="appType" id="app-type">Application Type
        <span class="caret"></span></button>
        <ul class="dropdown-menu scrollable-menu" id="county-select">
            <li role="presentation"><a role="menuitem" tabindex="-1" href="#/" value="County">Application Type</a></li>
            @foreach (var apptype in Model)
            {
                <li role="presentation"><a role="menuitem" tabindex="-1" href="#/" value="@apptype.AppTypeId">@apptype.AppTypeTrans</a></li>
            }
        </ul>
    </div>
</div>
<button class="btn btn-primary" id="start-btn" onclick="loadPage()" disabled>Start</button>

@section Scripts {
    <script type="text/javascript">
        /* Fills dropdown button with selected value */
        $('.dropdown-menu').on('click', 'a', function(e) {
            e.preventDefault();
            var text = $(this).html();
            var htmlText = text + ' <span class="caret"></span>';
            $(this).closest('.dropdown').find('.dropdown-toggle').html(htmlText);
            // Set value of button to be value from li
            $(this).closest('.dropdown').find('.dropdown-toggle').val($(this)[0].attributes.value.value);
            toggleDisabled(this);
        });

        function toggleDisabled(e) {
            const defaultVal = "Application Type";
            let btn = document.getElementById("start-btn");
            if (e.innerText != defaultVal) {
                // Enable buton if something was selected other than default value
                btn.disabled = false;
            } else {
                btn.disabled = true;
            }
        }

        function loadPage() {
            window.location.href = "/Application/GrowerLookup/" + "?appTypeId=" + document.getElementById("app-type").value;
        }

        /* Deals with Firefox's autocomplete "remembering" the disabled state of a button on reload */
        window.addEventListener('pageshow', PageShowHandler, false);
        window.addEventListener('unload', UnloadHandler, false);

        function PageShowHandler() {
            window.addEventListener('unload', UnloadHandler, false);
        }

        function UnloadHandler() {
            document.getElementById("start-btn").disabled = true;
            window.removeEventListener('unload', UnloadHandler, false);
        }
    </script>
}